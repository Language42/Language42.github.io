<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE html
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
    <link rel="stylesheet" type="text/css" href="/css/style.css" media="all"/>
    <script src="/js/ace.js"></script>
    <script src="/js/utils.js"></script>
    <link rel="shortcut icon" href="/css/favicon.ico"/>
    <title>42 - Metaprogramming as default</title>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script src="https://www.googletagmanager.com/gtag/js?id=G-M0E4M0XH2Z"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-M0E4M0XH2Z');
    </script>
    <script src="https://www.googletagmanager.com/gtag/js?id=UA-212820693-1">
    </script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'UA-212820693-1');
    </script>
    <script src="https://www.googletagmanager.com/gtag/js?id=AW-10810288706"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'AW-10810288706');
    </script>
  </head>
  <body onload='doOnLoad();'>
    <div id="wrapper">
      <div id="headerwrap">
        <div id="header">
          <a href="/index.xhtml"><img style='float:left;'
            src='/css/logoBlueSmaller.png' alt='42' width='120' height='120'/> </a>
          <h3 style='float:left;'>
            <p style='font-size:150%; color:rgb(250,250,250);'>42 - The definitive answer to design, code and everything</p>
            <p style='font-size:100%; color:rgb(250,250,250);'> --But you are not going to like it</p>
          </h3>
        </div>
      </div>
      <div id="contentwrap">
        <div id="content">
<p>

<div class="baseHeight index"><div class="wrapFloat"><div class="inFloat">
<div class="rotate90">Index of Content</div>
</div><div class="inFloat">
<ol>
 <li><a href="#GuiBuilder"> The Gui Builder library </a></li>

</ol>
</div></div><div class="finishFloat"></div></div>

</p><p id="GuiBuilder">
</p><div style="break-after:page"></div><h1> The Gui Builder library </h1> <p>
</p><h2> Importing process and example usage </h2> <p>

<pre class="l42Big"><![CDATA[
GuiBuilder = Load:{reuse[L42.is/GuiBuilder]}
..
  (
  )
]]></pre>

</p><h2> Overview under AdamsTowel </h2> <p>
<pre class="l42BigFolded"><![CDATA[
#apply(javaServer)                 class method Library #apply(class Any javaServer)[Trait.InvalidName, Trait.InvalidMap, Trait.ClassClash, Trait.MethodClash]=(..)
GuiBuilder={
  [Trait.Lifted]
  #apply()                           class method Trait #apply()=(..)
  #apply(squareBuilder)              class method Trait #apply(mut Trait.Acc squareBuilder)[Trait.InvalidName, Trait.InvalidMap, Trait.ClassClash, Trait.MethodClash]=(..)
  #plus0(lib)                        class method Trait #plus0(Library lib)[Trait.ClassClash, Trait.MethodClash]=(..)
  #plus1(lib)                        class method Trait #plus1(Library lib)[Trait.ClassClash, Trait.MethodClash]=(..)
  code()                             class method Library code()=(..)
  info()                             class method Info info()=(..)
  resetDocs(squareBuilder)           class method Trait resetDocs(mut Trait.DocMap squareBuilder)[Trait.InvalidName]=(..)
  ClassOperators={
    #apply()                           class method Trait #apply()=(..)
    }
  }
]]></pre>
Example instantiation
<pre class="l42BigFolded"><![CDATA[
[HasToS]
//class methods:
#apply(j, package, imports, name, x, y)     class method mut This #apply(mut GuiJ j, S package, S imports, S name, I x, I y)=(..)
#apply(j, package, imports, name, x, y, ping)     class method mut This #apply(fwd mut GuiJ j, fwd imm S package, fwd imm S imports, fwd imm S name, fwd imm I x, fwd imm I y, fwd imm I ping)=(..)
#apply(j, package, name, x, y)     class method mut This #apply(mut GuiJ j, S package, S name, I x, I y)=(..)
#apply(j, package, name, x, y, ping)     class method mut This #apply(mut GuiJ j, S package, S name, I x, I y, I ping)=(..)
#immK(j, package, imports, name, x, y, ping)     class method This #immK(GuiJ j, S package, S imports, S name, I x, I y, I ping)=(..)
defaultImports()                   class method S defaultImports()=(..)
//imm methods:
#bangequal0(that)                  method Bool #bangequal0(This that)=(..)
#equalequal0(that)                 method Bool #equalequal0(This that)=(..)
norm()                             method This norm()=(..)
with(imports)                      method This with(S imports)=(..)
with(j)                            method This with(GuiJ j)=(..)
with(name)                         method This with(S name)=(..)
with(package)                      method This with(S package)=(..)
with(ping)                         method This with(I ping)=(..)
with(x)                            method This with(I x)=(..)
with(y)                            method This with(I y)=(..)
//read methods:
button(id, msg, text)              read method S button(S id, S msg, S text)=(..)
immClone()                         read method This immClone()=(..)
imports()                          read method S imports()=(..)
j()                                read method read GuiJ j()=(..)
name()                             read method S name()=(..)
package()                          read method S package()=(..)
ping()                             read method I ping()=(..)
readEquality(that)                 read method Bool readEquality(read This that)=(..)
toS()                              read method S toS()=(..)
toSwing(that)                      read method S toSwing(S that)=(..)
x()                                read method I x()=(..)
y()                                read method I y()=(..)
//mut methods:
#from(stringLiteral)               mut method Void #from(S.StringBuilder stringLiteral)[GuiJ.Fail]=(..)
#j()                               mut method mut GuiJ #j()=(..)
capsuleClone()                     mut method capsule This capsuleClone()=(..)
JavaCode={
  closing()                          class method S closing()=(..)
  defaultImports()                   class method S defaultImports()=(..)
  label(k, id, text)                 class method S label(S k, S id, S text)=(..)
  openingNoPing(name, x, y)          class method S openingNoPing(S name, I x, I y)=(..)
  openingPing(name, x, y, pingDelay)     class method S openingPing(S name, I x, I y, I pingDelay)=(..)
  table(k, id, columns)              class method S table(S k, S id, S columns)=(..)
  }
]]></pre>


        </p>
        </div>
      </div>
      <div id="footerwrap">
        <div id="footer">
          <ul style='padding: 10px;'>
            <li style='display:inline;'>
            <a href="mailto:marco.servetto@gmail.com" rel="me">Contact Us</a> |</li>
            <li style='display:inline;'>
            <a href= "http://ecs.victoria.ac.nz/mailman/listinfo/team42">Mailing list</a> |</li>
          </ul>
        </div>
      </div>
    </div>

	
  </body>
</html>


