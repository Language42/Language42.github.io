<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE html
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
    <link rel="stylesheet" type="text/css" href="/css/style.css" media="all"/>
    <link rel="apple-touch-icon" sizes="180x180" href="/css/fav/apple-touch-icon.png"/>
    <link rel="icon" type="image/png" sizes="32x32" href="/css/fav/favicon-32x32.png"/>
    <link rel="icon" type="image/png" sizes="16x16" href="/css/fav/favicon-16x16.png"/>
    <meta name="msapplication-TileColor" content="#da532c"/>
    <meta name="theme-color" content="#ffffff"/>
    <script src="/js/ace.js"></script>
    <script src="/js/utils.js"></script>
    <title>42 - Metaprogramming as default</title>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script src="https://www.googletagmanager.com/gtag/js?id=G-M0E4M0XH2Z"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-M0E4M0XH2Z');
    </script>
    <script src="https://www.googletagmanager.com/gtag/js?id=UA-212820693-1">
    </script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'UA-212820693-1');
    </script>
    <script src="https://www.googletagmanager.com/gtag/js?id=AW-10810288706"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'AW-10810288706');
    </script>
  </head>
  <body onload='doOnLoad();'>
    <div id="wrapper">
      <div id="headerwrap">
        <div id="header">
          <a href="/index.xhtml"><img style='float:left;'
            src='/css/logoBlueSmaller.png' alt='42' width='120' height='120'/> </a>
          <h3 style='float:left;'>
            <p style='font-size:150%; color:rgb(250,250,250);'>42 - The definitive answer to design, code and everything</p>
            <p style='font-size:100%; color:rgb(250,250,250);'> --But you are not going to like it</p>
          </h3>
        </div>
      </div>
      <div id="contentwrap">
        <div id="content">
<p>

<div class="baseHeight index"><div class="wrapFloat"><div class="inFloat">
<div class="rotate90">Index of Content</div>
</div><div class="inFloat">
<ol>
 <li><a href="#GitWriter"> A library to write on GitHub </a></li>

</ol>
</div></div><div class="finishFloat"></div></div>

</p><p id="GitWriter">
</p><div style="break-after:page"></div><h1> A library to write on GitHub </h1> <p>
</p><h2> Importing process and example usage </h2> <p>


<pre class="l42Big"><![CDATA[
GW = Load:{reuse[L42.is/GitWriter]}
]]></pre>

</p><h2> Overview under AdamsTowel </h2> <p>
<pre class="l42BigFolded"><![CDATA[
[HasToS]
//class methods:
#$of(token, message)               class method mut This #$of(S token, S message)=(..)
#apply(httpRequest, token, message)     class method mut This #apply(fwd mut HttpRequest httpRequest, fwd imm S token, fwd imm S message)=(..)
#immK(httpRequest, token, message)     class method This #immK(HttpRequest httpRequest, S token, S message)=(..)
//imm methods:
#bangequal0(that)                  method Bool #bangequal0(This that)=(..)
#equalequal0(that)                 method Bool #equalequal0(This that)=(..)
norm()                             method This norm()=(..)
with(httpRequest)                  method This with(HttpRequest httpRequest)=(..)
with(message)                      method This with(S message)=(..)
with(token)                        method This with(S token)=(..)
//read methods:
httpRequest()                      read method read HttpRequest httpRequest()=(..)
immClone()                         read method This immClone()=(..)
message()                          read method S message()=(..)
readEquality(that)                 read method Bool readEquality(read This that)=(..)
toS()                              read method S toS()=(..)
token()                            read method S token()=(..)
//mut methods:
#apply(user, repository, path, contentBase64)     mut method Void #apply(S user, S repository, S path, S contentBase64)[Fail]=(..)
#httpRequest()                     mut method mut HttpRequest #httpRequest()=(..)
capsuleClone()                     mut method capsule This capsuleClone()=(..)
write(on, contentBase64)           mut method Void write(Url on, S contentBase64)[Fail]=(..)
Fail={
  [Message, HasToS, Message.Guard]
  //class methods:
  #apply(text, cause)                class method mut This #apply(S text, Message.OptMessage cause)
  #apply(that)                       class method mut This #apply(S that)=(..)
  #from(stringLiteral)               class method This #from(S.StringBuilder stringLiteral)=(..)
  //imm methods:
  #whoopsed(atPos)                   method This #whoopsed(Library atPos)=(..)
  with(cause)                        method This with(Message cause)=(..)
  //read methods:
  cause()                            read method Message.OptMessage cause()
  text()                             read method S text()
  toS()                              read method S toS()=(..)
  //mut methods:
  cause(that)                        mut method Void cause(Message.OptMessage that)
  text(that)                         mut method Void text(S that)
  }
HttpRequest={
  interface
  #apply(request, body)              mut method Response #apply(S request, S body)[Fail]
  Real={
    [This1]
    //class methods:
    #$of()                             @Public class method mut This #$of()=(..)
    //mut methods:
    #apply(request, body)              @Public mut method Response #apply(S request, S body)[Fail]=(..)
    }
  Response={
    [HasToS]
    //class methods:
    #apply(statusCode, body)           class method This #apply(fwd imm I statusCode, fwd imm S body)=(..)
    #immK(statusCode, body)            class method This #immK(I statusCode, S body)=(..)
    //imm methods:
    #bangequal0(that)                  method Bool #bangequal0(This that)=(..)
    #equalequal0(that)                 method Bool #equalequal0(This that)=(..)
    norm()                             method This norm()=(..)
    with(body)                         method This with(S body)=(..)
    with(statusCode)                   method This with(I statusCode)=(..)
    //read methods:
    body()                             read method S body()=(..)
    immClone()                         read method This immClone()=(..)
    readEquality(that)                 read method Bool readEquality(read This that)=(..)
    statusCode()                       read method I statusCode()=(..)
    toS()                              read method S toS()=(..)
    //mut methods:
    capsuleClone()                     mut method capsule This capsuleClone()=(..)
    }
  }
]]></pre>
        </p>
        </div>
      </div>
      <div id="footerwrap">
        <div id="footer">
          <ul style='padding: 10px;'>
            <li style='display:inline;'>
            <a href="mailto:marco.servetto@gmail.com" rel="me">Contact Us</a> |</li>
            <li style='display:inline;'>
            <a href= "http://ecs.victoria.ac.nz/mailman/listinfo/team42">Mailing list</a> |</li>
          </ul>
        </div>
      </div>
    </div>

	
  </body>
</html>


